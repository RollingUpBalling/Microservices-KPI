apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:2.7.0-debian-10-r29
          ports:
            - containerPort: 9092
              name: kafka-client
            - containerPort: 9093
              name: kafka-internal
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: 'INTERNAL://:9093,CLIENT://:9092'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT'
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'CLIENT://$(MY_POD_IP):9092,INTERNAL://$(MY_POD_IP):9093'
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
#          volumeMounts:
#            - mountPath: /bitnami/kafka
#              name: kafka
#      volumes:
#        - name: kafka
#          persistentVolumeClaim:
#            claimName: demo-storage
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    name: kafka
spec:
  ports:
    - port: 9092
  selector:
    app: kafka
